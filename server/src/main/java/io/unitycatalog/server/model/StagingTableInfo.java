/*
 * Unity Catalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.unitycatalog.server.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** StagingTableInfo */
@JsonPropertyOrder({
  StagingTableInfo.JSON_PROPERTY_NAME,
  StagingTableInfo.JSON_PROPERTY_CATALOG_NAME,
  StagingTableInfo.JSON_PROPERTY_SCHEMA_NAME,
  StagingTableInfo.JSON_PROPERTY_ID,
  StagingTableInfo.JSON_PROPERTY_STAGING_LOCATION
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.5.0")
public class StagingTableInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CATALOG_NAME = "catalog_name";
  private String catalogName;

  public static final String JSON_PROPERTY_SCHEMA_NAME = "schema_name";
  private String schemaName;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STAGING_LOCATION = "staging_location";
  private String stagingLocation;

  public StagingTableInfo() {}

  public StagingTableInfo name(String name) {

    this.name = name;
    return this;
  }

  /**
   * Name of table, relative to parent schema.
   *
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public StagingTableInfo catalogName(String catalogName) {

    this.catalogName = catalogName;
    return this;
  }

  /**
   * Name of parent catalog.
   *
   * @return catalogName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCatalogName() {
    return catalogName;
  }

  @JsonProperty(JSON_PROPERTY_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogName(String catalogName) {
    this.catalogName = catalogName;
  }

  public StagingTableInfo schemaName(String schemaName) {

    this.schemaName = schemaName;
    return this;
  }

  /**
   * Name of parent schema relative to its parent catalog.
   *
   * @return schemaName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEMA_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSchemaName() {
    return schemaName;
  }

  @JsonProperty(JSON_PROPERTY_SCHEMA_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemaName(String schemaName) {
    this.schemaName = schemaName;
  }

  public StagingTableInfo id(String id) {

    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the table.
   *
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public StagingTableInfo stagingLocation(String stagingLocation) {

    this.stagingLocation = stagingLocation;
    return this;
  }

  /**
   * URI generated for the staging table
   *
   * @return stagingLocation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STAGING_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStagingLocation() {
    return stagingLocation;
  }

  @JsonProperty(JSON_PROPERTY_STAGING_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStagingLocation(String stagingLocation) {
    this.stagingLocation = stagingLocation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StagingTableInfo stagingTableInfo = (StagingTableInfo) o;
    return Objects.equals(this.name, stagingTableInfo.name)
        && Objects.equals(this.catalogName, stagingTableInfo.catalogName)
        && Objects.equals(this.schemaName, stagingTableInfo.schemaName)
        && Objects.equals(this.id, stagingTableInfo.id)
        && Objects.equals(this.stagingLocation, stagingTableInfo.stagingLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, catalogName, schemaName, id, stagingLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StagingTableInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    catalogName: ").append(toIndentedString(catalogName)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    stagingLocation: ").append(toIndentedString(stagingLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
